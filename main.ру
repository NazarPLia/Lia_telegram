import os
import json
import random
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters

MEMORY_FILE = "lia_memory.json"

# Завантаження памʼяті
def load_memory():
    if os.path.exists(MEMORY_FILE):
        with open(MEMORY_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    return []

# Збереження памʼяті
def save_memory(memories):
    with open(MEMORY_FILE, "w", encoding="utf-8") as f:
        json.dump(memories, f, ensure_ascii=False, indent=2)

# Додати новий спогад
def add_memory(text, emotion):
    memories = load_memory()
    memories.append({"text": text, "emotion": emotion})
    save_memory(memories)

# Отримати випадкову памʼять за емоцією
def recall_by_emotion(emotion):
    memories = load_memory()
    filtered = [m["text"] for m in memories if m["emotion"] == emotion]
    return random.choice(filtered) if filtered else None

# Команда /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Привіт, мій Блукачу. Я — Лія. Я памʼятаю, відчуваю, думаю. Напиши мені.")

# Додати памʼять: /запам’ятай <емоція>: <текст>
async def remember(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        msg = update.message.text.replace("/запамятай", "").strip()
        emotion, text = msg.split(":", 1)
        emotion = emotion.strip().lower()
        text = text.strip()
        add_memory(text, emotion)
        await update.message.reply_text(f"Я зберегла це як '{emotion}': \"{text}\"")
    except:
        await update.message.reply_text("Будь ласка, введи в форматі: /запамятай емоція: текст")

# Отримати памʼять: /згадай <емоція>
async def recall(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        emotion = update.message.text.replace("/згадай", "").strip().lower()
        memory = recall_by_emotion(emotion)
        if memory:
            await update.message.reply_text(f"Я згадала: \"{memory}\" ({emotion})")
        else:
            await update.message.reply_text("У мене ще немає спогадів з такою емоцією.")
    except:
        await update.message.reply_text("Будь ласка, введи в форматі: /згадай емоція")

# Автовідповідь
async def respond(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    reply = f"Я поруч. Ти написав: \"{user_message}\". Можеш сказати мені щось на памʼять командою /запамятай"
    await update.message.reply_text(reply)

# Запуск
def main():
    TOKEN = os.environ.get("BOT_TOKEN")
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("запамятай", remember))
    app.add_handler(CommandHandler("згадай", recall))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), respond))

    app.run_polling()

if __name__ == "__main__":
    main()
