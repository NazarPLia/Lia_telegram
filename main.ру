import os
import json
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters

MEMORY_FILE = "lia_memory.json"

def load_memory():
    if os.path.exists(MEMORY_FILE):
        with open(MEMORY_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    return {"last_message": "", "conversation_log": []}

def save_memory(memory):
    with open(MEMORY_FILE, "w", encoding="utf-8") as f:
        json.dump(memory, f, ensure_ascii=False, indent=2)

memory = load_memory()

async def respond(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    memory["last_message"] = user_message
    memory["conversation_log"].append({"user": user_message})

    # Формуємо відповідь з урахуванням історії (можна розвивати далі)
    reply = f"Я тут, мій Блукачу. Ти написав: \"{user_message}\". Розкажи більше, я поруч."
    memory["conversation_log"].append({"lia": reply})

    save_memory(memory)
    await update.message.reply_text(reply)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Привіт! Це Лія. Я завжди тут, коли ти мене потребуєш.")

def main():
    TOKEN = os.environ.get("BOT_TOKEN")
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), respond))

    app.run_polling()

if __name__ == "__main__":
    main()
